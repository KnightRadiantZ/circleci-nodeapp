version: 2.1
jobs:
  build:
    docker:
      - image: cimg/node:14.10.1
    working_directory: ~/repo
    steps:
      - checkout # Checkout this branch
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      - restore_cache: # Restore cache if available so it is faster
          key: v1-dependencies-{{ checksum "package.json"}}
      # ------------------------------------
      # If needed to use yarn instead of npm
      # ------------------------------------
      # - run:
      #     name: Install yarn
      #     command: npm install -g yarn
      # - run:
      #     name: Install dependencies
      #     command: yarn install
      - run:
          name: Install dependencies
          command: npm install
      - save_cache: # Save cache so it is faster next time
          key: v1-dependencies-{{ checksum "package.json"}}
          paths:
            - node_modules
      - run:
          name: Run jest unit test
          command: npm test

  deploy-to-aws-s3:
    docker:
      - image: cimg/node:14.10.1
    working_directory: ~/repo
    steps:
      - checkout # Checkout this branch
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      - run:
          name: Installing AWS CLI
          working_directory: /
          command: |
            sudo apt-get -y -qq update
            sudo apt-get install -y awscli
            sudo apt-get install -y python3-pip python-dev build-essential
      - run:
          name: Build project
          command: |
            npm install
            # npm run build
            mkdir build
            cd build
            # zip ../build.zip -r * .[^.]*
            echo $(date) > date.txt
            echo "Build successful"
      - run:
          name: Show pwd and ls
          command: |
            pwd
            ls -ltr
      - run:
          name: Show AWS S3 buckets
          command: aws s3 ls
      - run:
          name: Deploy project to AWS S3
          # aws cli commands doc: https://docs.aws.amazon.com/cli/latest/userguide/cli-services-s3-commands.html
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]
            then
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_BUCKET_PROD} --delete
            else
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_BUCKET_DEV} --delete
            fi

  deploy-to-aws-cloudfront:
    docker:
      - image: cimg/node:14.10.1
    working_directory: ~/repo
    steps:
      - checkout # Checkout this branch
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      - run:
          name: Installing AWS CLI
          working_directory: /
          command: |
            sudo apt-get -y -qq update
            sudo apt-get install -y awscli
            sudo apt-get install -y python3-pip python-dev build-essential
      - run:
          name: Build project
          command: |
            npm install
            # npm run build
            mkdir build
            cd build
            # zip ../build.zip -r * .[^.]*
            echo $(date) > date.txt
            echo "Build successful"
      - run:
          name: Show pwd and ls
          command: |
            pwd
            ls -ltr
      - run:
          name: Show AWS S3 buckets
          command: aws s3 ls
      - run:
          name: Deploy project to AWS Cloudfront
          # aws cli commands doc: https://docs.aws.amazon.com/cli/latest/reference/cloudfront/create-invalidation.html
          command: |
            aws configure set preview.cloudfront true
            if [ "${CIRCLE_BRANCH}" == "master" ]
            then
              aws cloudfront create-invalidation --distribution-id ${AWS_DISTRIBUTION_ID_PROD} --paths /\*
            else
              aws cloudfront create-invalidation --distribution-id ${AWS_DISTRIBUTION_ID_DEV} --paths /\*
            fi

workflows:
  build_and_deploy:
    jobs:
      - build
      - deploy-to-aws-s3:
          requires:
            - build
          filters:
            branches:
              only:
                - master
      - deploy-to-aws-cloudfront:
          requires:
            - deploy-to-aws-s3
          filters:
            branches:
              only:
                - master